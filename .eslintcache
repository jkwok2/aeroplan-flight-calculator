[{"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/index.js":"1","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/reportWebVitals.js":"2","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/App.js":"3","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/DistanceDisplay.js":"4","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/InputTextField.js":"5","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/ClassDropdown.js":"6","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/ResetButton.js":"7","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/CostDisplay.js":"8","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/Map.js":"9","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/Calculator.js":"10"},{"size":500,"mtime":1610254613539,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610254613539,"results":"13","hashOfConfig":"12"},{"size":1474,"mtime":1610275580396,"results":"14","hashOfConfig":"12"},{"size":388,"mtime":1610275678785,"results":"15","hashOfConfig":"12"},{"size":1074,"mtime":1610275681698,"results":"16","hashOfConfig":"12"},{"size":689,"mtime":1610275706385,"results":"17","hashOfConfig":"12"},{"size":526,"mtime":1610269964493,"results":"18","hashOfConfig":"12"},{"size":994,"mtime":1610276013780,"results":"19","hashOfConfig":"12"},{"size":832,"mtime":1610269964492,"results":"20","hashOfConfig":"12"},{"size":9268,"mtime":1610275622923,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uidcic",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":8,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/index.js",[],["47","48"],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/reportWebVitals.js",[],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/App.js",[],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/DistanceDisplay.js",["49"],"import React, {Component} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Calculator from './Calculator'\n\nclass DistanceDisplay extends Component {\n  \n\n    render(){\n        return (  // every component needs a render\n            <TextField id=\"outlined-basic\" label=\"Distance to location\" variant=\"outlined\" />\n        )\n    }\n}\n\nexport default DistanceDisplay;\n","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/InputTextField.js",["50","51"],"import React, {Component} from 'react'\nimport Calculator from './Calculator'\n\n\nclass InputTextField extends React.Component {\n\n        constructor(props) {\n          super(props);\n          this.state = {value: 'coconut'};\n          this.handleChange = this.handleChange.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n        }\n      \n        // code to signal there is an issue with the input\n        handleChange(event) {    this.setState({value: event.target.value});  }\n        handleSubmit(event) {\n          alert('Sad. Those are valid airports! Please re-enter airports');\n          event.preventDefault();\n        }\n      \n        render() {\n          return (\n           \n            <form onSubmit={this.handleSubmit}>\n          \n           <textarea name=\"textarea\"\n            rows=\"5\" cols=\"30\"\n            placeholder=\"Enter airports here in the following format: YVR-FRA-LAX\"></textarea>\n\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n\n          );\n           \n        }\n      }\n\nexport default InputTextField;\n","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/ClassDropdown.js",["52","53"],"import React, {Component} from 'react'\nimport Calculator from './Calculator'\n\nclass ClassDropdown extends Component {\n  \n    constructor(props) {\n        super(props);\n      \n      }\n   \n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n            <label>\n              Flight Class  \n              <select>          \n                <option value=\"economy\">Economy</option>\n                <option value=\"business\">Business</option>\n                <option value=\"first\">First</option>\n              </select>\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        );\n      }\n    }\n\n\nexport default ClassDropdown;\n","/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/ResetButton.js",[],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/CostDisplay.js",["54"],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/Map.js",[],"/Users/imogenem/imogenem/aeroplan-flight-calculator/src/Components/Calculator.js",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"const airportData = require('../resources/airports.json');\nconst countries = require('../resources/countries.json');\nconst ATAT = require('../resources/awardchartATAT.json');\nconst ATPA = require('../resources/awardchartATPA.json');\nconst ATSA = require('../resources/awardchartATSA.json');\nconst NAAT = require('../resources/awardchartNAAT.json');\nconst NANA = require('../resources/awardchartNANA.json');\nconst NAPA = require('../resources/awardchartNAPA.json');\nconst NASA = require('../resources/awardchartNASA.json');\nconst PAPA = require('../resources/awardchartPAPA.json');\nconst PASA = require('../resources/awardchartPASA.json');\nconst SASA = require('../resources/awardchartSASA.json');\n\nclass Calculator {\n    constructor (inputString, cos) {\n        this.inputString = inputString\n        this.cos = cos\n        this.cityArr = []\n        this.distances = []\n        this.originZone;\n        this.destZone;\n\n    }\n}\n\nlet inputString = \"YVR-YYZ-ZRH\"; // from form;\nlet cos = \"j\" // from form\nlet cityArr = [];\nlet distances = [];\nlet originZone; \nlet destZone;\n\nconst splitString = (inputString) => {\n    cityArr = inputString.split(\"-\");\n}\n\n// Use Haversine Function to calculate distance\nconst calculateDistance = (origLong, origLat, destLong, destLat) => {\n    const earthRadiusMiles = 3958.756  //miles (6371  km)\n\n    let distLat = toRadians(destLat - origLat);    \n    let distLong = toRadians(destLong - origLong);\n\n    let sin2Lat = Math.sin(distLat / 2) * Math.sin(distLat / 2);\n    let sin2Long = Math.sin(distLong / 2) * Math.sin(distLong / 2);\n    let cosOLat = Math.cos(toRadians(origLat))\n    let cosdLat = Math.cos(toRadians(destLat))\n\n    let b = sin2Lat + (sin2Long * cosOLat * cosdLat);\n    let c = 2 * Math.asin(Math.sqrt(b));\n    return Math.round(earthRadiusMiles * c);\n}\n\n// helper function to convert degrees to radians\nfunction toRadians(degrees) {\n    return degrees * Math.PI / 180;\n    \n}\n\nconst totalDistance = (distances) => {\n    let result = 0;\n    for (let i = 0; i < distances.length; i++) {\n        result += distances[i];\n    }\n    return result;\n}\n\nconst distInArray = (cityArr) => {\n    for (let i = 0; i < cityArr.length - 1; i++) {\n        distances.push(calculateDistance(airportData[cityArr[i]].long, airportData[cityArr[i]].lat, airportData[cityArr[i+1]].long, airportData[cityArr[i+1]].lat));       \n    }\n}\n\nconst calcRegion = (country) => {\n    if (countries[country] === \"North America\") {\n        return \"NA\"\n    } else if (countries[country] === \"Europe\") {\n        return \"AT\"\n    } else if (countries[country] === \"Africa\") {\n        return \"AT\"\n    } else if (countries[country] === \"South America\") {\n        return \"SA\"\n    } else if (countries[country] === \"Oceania\") {\n        return \"PA\"\n    } else if (countries[country] === \"Asia\") {\n        return \"PA\"\n    } else if (countries[country] === \"Atlantic\") {\n        return \"AT\"\n    }\n}\n\nconst calcZone = (cityArr) => {\n    let originCountry = airportData[cityArr[0]].location;\n    let destCountry = airportData[cityArr[cityArr.length - 1]].location\n    let originZone = calcRegion(originCountry);\n    let destZone = calcRegion(destCountry);\n    return originZone + destZone\n}\n\nconst distToBand = (zone, dist) => {\n    switch (zone) {\n        case \"ATAT\":\n            if (0 <= dist && dist <= 1000) {\n                return \"band1\"\n            } else if (1001 <= dist && dist <= 2000) {\n                return \"band2\"\n            } else if (2001 <= dist && dist <= 4000) {\n                return \"band3\"\n            } else if (4001 <= dist && dist <= 6000) {\n                return \"band4\"\n            } else if (6001 <= dist) {\n                return \"band5\"\n            } \n        case \"ATPA\":\n            if (0 <= dist && dist <= 5000) {\n                return \"band1\"\n            } else if (5001 <= dist && dist <= 7000) {\n                return \"band2\"\n            } else if (7001 <= dist) {\n                return \"band3\"\n            }\n        case \"ATSA\":\n            if (0 <= dist && dist <= 7000) {\n                return \"band1\"\n            } else if (7001 <= dist) {\n                return \"band2\"\n            }\n        case \"NAAT\":\n            if (0 <= dist && dist <= 4000) {\n                return \"band1\"\n            } else if (4001 <= dist && dist <= 6000) {\n                return \"band2\"\n            } else if (6001 <= dist && dist <= 8000) {\n                return \"band3\";\n            } else if (8001 <= dist){\n                return \"band4\";\n            }\n        case \"NANA\":\n            if (0 <= dist && dist <= 500) {\n                return \"band1\";\n            } else if (501 <= dist && dist <= 1500){\n                return \"band2\";\n            } else if (1501 <= dist && dist <= 2750) {\n                return \"band3\";\n        \n            } else if (2751 <= dist) {\n                return \"band4\";\n            }\n        case \"NAPA\":\n            if (0 <= dist && dist <= 5000) {\n                return \"band1\";\n            } else if (5001 <= dist && dist <= 7500) {\n                return \"band2\";\n            } else if (7501 <= dist && dist <= 11000) {\n                return \"band3\";\n            } else if (11001 <= dist) {\n                return \"band4\";\n            }\n\n        case \"NASA\":\n            if (0 <= dist && dist <= 4500) {\n                return \"band1\";\n            } else if (4501 <= dist) {\n                return \"band2\";\n            }\n        \n        case \"PAPA\":\n            if (0 <= dist && dist <= 1000) {\n                return \"band1\"\n            } else if (1001 <= dist && dist <= 2000) {\n                return \"band2\"\n            } else if (2001 <= dist && dist <= 5000) {\n                return \"band3\"\n            } else if (5001 <= dist && dist <= 7000) {\n                return \"band4\"\n            } else if (7000 <= dist) {\n                return \"band5\"\n            } \n        case \"PASA\":\n            if (0 <= dist && dist <= 11000) {\n                return \"band1\"\n            } else if (11000 <= dist) {\n                return \"band2\"\n            }\n        case \"SASA\":\n            return \"band1\"\n        \n    }\n}\n\nconst totalPrice = (zone, band, cos) => {\n    switch (zone) {\n        case \"ATAT\":\n            if (cos === \"e\") {\n                return ATAT[band].economy\n            } else if (cos == \"j\") {\n                return ATAT[band].business\n            } else if (cos == \"f\") {\n                return ATAT[band].first\n            }\n        case \"ATPA\":\n            if (cos === \"e\") {\n                return ATAT[band].economy\n            } else if (cos == \"j\") {\n                return ATAT[band].business\n            } else if (cos == \"f\") {\n                return ATAT[band].first\n            }\n        case \"ATSA\":\n            if (cos === \"e\") {\n                return ASAS[band].economy\n            } else if (cos == \"j\") {\n                return ASAS[band].business\n            } else if (cos == \"f\") {\n                return ASAS[band].first\n            }\n        case \"NAAT\":\n            if (cos === \"e\") {\n                return NAAT[band].economy\n            } else if (cos == \"j\") {\n                return NAAT[band].business\n            } else if (cos == \"f\") {\n                return NAAT[band].first\n            }\n        case \"NANA\":\n            if (cos === \"e\") {\n                return NANA[band].economy\n            } else if (cos == \"j\") {\n                return NANA[band].business\n            } else if (cos == \"f\") {\n                return NANA[band].first\n            }\n        case \"NAPA\":\n            if (cos === \"e\") {\n                return NAPA[band].economy\n            } else if (cos == \"j\") {\n                return NAPA[band].business\n            } else if (cos == \"f\") {\n                return NAPA[band].first\n            }\n        case \"NASA\":\n            if (cos === \"e\") {\n                return NASA[band].economy\n            } else if (cos == \"j\") {\n                return NASA[band].business\n            } else if (cos == \"f\") {\n                return NASA[band].first\n            }        \n        case \"PAPA\":\n            if (cos === \"e\") {\n                return PAPA[band].economy\n            } else if (cos == \"j\") {\n                return PAPA[band].business\n            } else if (cos == \"f\") {\n                return PAPA[band].first\n            }\n        case \"PASA\":\n            if (cos === \"e\") {\n                return PASA[band].economy\n            } else if (cos == \"j\") {\n                return PASA[band].business\n            } else if (cos == \"f\") {\n                return PASA[band].first\n            }\n        case \"SASA\":\n            if (cos === \"e\") {\n                return SASA[band].economy\n            } else if (cos == \"j\") {\n                return SASA[band].business\n            } else if (cos == \"f\") {\n                return SASA[band].first\n            }\n    }\n}\n\n// yvr-yyz-zrh\n// [yvr, yyz, zrh]\n// [2079, 4033]\n// [5000]\n\nsplitString(inputString)\nconsole.log(cityArr)\ndistInArray(cityArr)\nconsole.log(distances)\ntestTotalDistance = totalDistance(distances)\nconsole.log(testTotalDistance)\nvar testZone = calcZone(cityArr)\nconsole.log(testZone)\nvar testBand = distToBand(testZone, testTotalDistance)\nconsole.log(testBand)\nvar testTotalPrice = totalPrice(testZone, testBand, \"j\")\nconsole.log(testTotalPrice)",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":18},{"ruleId":"113","severity":1,"message":"117","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":9,"endColumn":8},{"ruleId":null,"fatal":true,"severity":2,"message":"122","line":37,"column":13},{"ruleId":"113","severity":1,"message":"123","line":4,"column":7,"nodeType":"115","messageId":"116","endLine":4,"endColumn":11},{"ruleId":"113","severity":1,"message":"124","line":5,"column":7,"nodeType":"115","messageId":"116","endLine":5,"endColumn":11},{"ruleId":"113","severity":1,"message":"114","line":14,"column":7,"nodeType":"115","messageId":"116","endLine":14,"endColumn":17},{"ruleId":"125","severity":2,"message":"126","line":20,"column":9,"nodeType":"127","messageId":"128","endLine":20,"endColumn":25},{"ruleId":"125","severity":2,"message":"126","line":21,"column":9,"nodeType":"127","messageId":"128","endLine":21,"endColumn":23},{"ruleId":"113","severity":1,"message":"129","line":27,"column":5,"nodeType":"115","messageId":"116","endLine":27,"endColumn":8},{"ruleId":"113","severity":1,"message":"130","line":30,"column":5,"nodeType":"115","messageId":"116","endLine":30,"endColumn":15},{"ruleId":"113","severity":1,"message":"131","line":31,"column":5,"nodeType":"115","messageId":"116","endLine":31,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":101,"column":5,"nodeType":"134","messageId":"135","endLine":188,"endColumn":6},{"ruleId":"136","severity":1,"message":"137","line":114,"column":9,"nodeType":"138","messageId":"139","endLine":121,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":122,"column":9,"nodeType":"138","messageId":"139","endLine":127,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":128,"column":9,"nodeType":"138","messageId":"139","endLine":137,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":138,"column":9,"nodeType":"138","messageId":"139","endLine":148,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":149,"column":9,"nodeType":"138","messageId":"139","endLine":158,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":160,"column":9,"nodeType":"138","messageId":"139","endLine":165,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":167,"column":9,"nodeType":"138","messageId":"139","endLine":178,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":179,"column":9,"nodeType":"138","messageId":"139","endLine":184,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":185,"column":9,"nodeType":"138","messageId":"139","endLine":186,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":192,"column":5,"nodeType":"134","messageId":"135","endLine":273,"endColumn":6},{"ruleId":"140","severity":1,"message":"141","line":196,"column":28,"nodeType":"142","messageId":"143","endLine":196,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":198,"column":28,"nodeType":"142","messageId":"143","endLine":198,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":201,"column":9,"nodeType":"138","messageId":"139","endLine":208,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":204,"column":28,"nodeType":"142","messageId":"143","endLine":204,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":206,"column":28,"nodeType":"142","messageId":"143","endLine":206,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":209,"column":9,"nodeType":"138","messageId":"139","endLine":216,"endColumn":14},{"ruleId":"144","severity":2,"message":"145","line":211,"column":24,"nodeType":"115","messageId":"146","endLine":211,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":212,"column":28,"nodeType":"142","messageId":"143","endLine":212,"endColumn":30},{"ruleId":"144","severity":2,"message":"145","line":213,"column":24,"nodeType":"115","messageId":"146","endLine":213,"endColumn":28},{"ruleId":"140","severity":1,"message":"141","line":214,"column":28,"nodeType":"142","messageId":"143","endLine":214,"endColumn":30},{"ruleId":"144","severity":2,"message":"145","line":215,"column":24,"nodeType":"115","messageId":"146","endLine":215,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":217,"column":9,"nodeType":"138","messageId":"139","endLine":224,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":220,"column":28,"nodeType":"142","messageId":"143","endLine":220,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":222,"column":28,"nodeType":"142","messageId":"143","endLine":222,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":225,"column":9,"nodeType":"138","messageId":"139","endLine":232,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":228,"column":28,"nodeType":"142","messageId":"143","endLine":228,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":230,"column":28,"nodeType":"142","messageId":"143","endLine":230,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":233,"column":9,"nodeType":"138","messageId":"139","endLine":240,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":236,"column":28,"nodeType":"142","messageId":"143","endLine":236,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":238,"column":28,"nodeType":"142","messageId":"143","endLine":238,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":241,"column":9,"nodeType":"138","messageId":"139","endLine":248,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":244,"column":28,"nodeType":"142","messageId":"143","endLine":244,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":246,"column":28,"nodeType":"142","messageId":"143","endLine":246,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":249,"column":9,"nodeType":"138","messageId":"139","endLine":256,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":252,"column":28,"nodeType":"142","messageId":"143","endLine":252,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":254,"column":28,"nodeType":"142","messageId":"143","endLine":254,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":257,"column":9,"nodeType":"138","messageId":"139","endLine":264,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":260,"column":28,"nodeType":"142","messageId":"143","endLine":260,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":262,"column":28,"nodeType":"142","messageId":"143","endLine":262,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":265,"column":9,"nodeType":"138","messageId":"139","endLine":272,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":268,"column":28,"nodeType":"142","messageId":"143","endLine":268,"endColumn":30},{"ruleId":"140","severity":1,"message":"141","line":270,"column":28,"nodeType":"142","messageId":"143","endLine":270,"endColumn":30},{"ruleId":"144","severity":2,"message":"147","line":285,"column":1,"nodeType":"115","messageId":"146","endLine":285,"endColumn":18},{"ruleId":"144","severity":2,"message":"147","line":286,"column":13,"nodeType":"115","messageId":"146","endLine":286,"endColumn":30},{"ruleId":"144","severity":2,"message":"147","line":289,"column":37,"nodeType":"115","messageId":"146","endLine":289,"endColumn":54},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Calculator' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Parsing error: Unexpected token, expected \",\"\n\n\u001b[0m \u001b[90m 35 | \u001b[39m    \u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m        \u001b[90m//     }}\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 37 | \u001b[39m            onChange\u001b[33m=\u001b[39m{(e) \u001b[33m=>\u001b[39m setValue(calc\u001b[33m.\u001b[39mtotalPrice(zone\u001b[33m,\u001b[39m band\u001b[33m,\u001b[39m cos))}\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 38 | \u001b[39m          \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 39 | \u001b[39m          \u001b[0m\n\u001b[0m \u001b[90m 40 | \u001b[39m        )\u001b[0m","'ATPA' is assigned a value but never used.","'ATSA' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","'cos' is assigned a value but never used.","'originZone' is defined but never used.","'destZone' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-undef","'ASAS' is not defined.","undef","'testTotalDistance' is not defined.","no-global-assign","no-unsafe-negation"]